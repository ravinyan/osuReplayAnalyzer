<Window x:Class="ReplayAnalyzer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ReplayAnalyzer" xmlns:vlc="clr-namespace:LibVLCSharp.WPF;assembly=LibVLCSharp.WPF"
        mc:Ignorable="d"
        Title="MainWindow" 
        Background="Black"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:WpfApp1.MusicPlayer="clr-namespace:ReplayAnalyzer.MusicPlayer.Controls">
    <!--Width="920" Height="560"-->
    <Window.Resources>
        <!-- slider has RepeatButton (slider behind and in front of thumb) and <Track> needs x:Name="PART_Track"-->
        <!-- might change focusable later but for now it stays false for sake of my sanity -->
        <!-- SLIDER STYLE -->
        <Style x:Key="SliderBarBehind" TargetType="RepeatButton">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border Background="#fac0e4" Height="5" CornerRadius="3"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderThumb" TargetType="Thumb">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Width" Value="17" />
            <Setter Property="Height" Value="17" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Ellipse Fill="#ff66c6" x:Name="SliderEllipseThumb"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="SliderEllipseThumb" Property="Fill" Value="#ff42b8"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderBarInfront" TargetType="RepeatButton">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border BorderBrush="White" Background="White" Height="5" CornerRadius="3"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="Slider" TargetType="Slider">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Track x:Name="PART_Track" Grid.Row="1" >
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderBarBehind}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderBarInfront}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumb}" Margin="-2"/>
                    </Track.Thumb>
                </Track>
            </Grid>
        </ControlTemplate>

        <Style x:Key="HorizontalSlider" TargetType="Slider">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="10, 0, 10, 0" />
            <Setter Property="Focusable" Value="False" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="MinHeight" Value="0" />
                    <Setter Property="MinWidth" Value="300" />
                    <Setter Property="Template" Value="{StaticResource Slider}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- BUTTON STYLES -->
        <Style x:Key="PlayButton" TargetType="Button">
            <Setter Property="Height" Value="25" />
            <Setter Property="Width" Value="25" />
            <Setter Property="Margin" Value="10" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse Fill="#392A36" />
                            <Polygon Points="10,10 10,18 16,14" Margin="0, -1.7"  Stroke="White" StrokeThickness="2" Fill="White" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PauseButton" TargetType="Button">
            <Setter Property="Height" Value="25" />
            <Setter Property="Width" Value="25" />
            <Setter Property="Margin" Value="10" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse Fill="#392A36" />
                            <Rectangle Height="12" Width="3" Stroke="White" Fill="White" Margin="14,5,7,5" />
                            <Rectangle Height="12" Width="3" Stroke="White" Fill="White" Margin="7,5,14,5" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- https://learn.microsoft.com/en-us/previous-versions/dotnet/netframework-3.0/ms752319(v=vs.85)
             basic checkbox style modified to look like switch button but without the switch circle part
             basically looking like osu lazer buttons but without transformations -->
        <!-- CHECKBOX STYLE -->
        <Style x:Key="SwitchBox" x:Name="SwitchBox" TargetType="CheckBox">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <!--<Setter Property="FocusVisualStyle"  Value="{StaticResource CheckBoxFocusVisual}"/>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <BulletDecorator>
                            <BulletDecorator.Bullet>
                                <Rectangle RadiusX="10" RadiusY="10" x:Name="Ellipse" Width="50" Height="20" 
                                           Fill="White" StrokeThickness="3" Stroke="#ff66c6">
                                </Rectangle>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left"
                                              RecognizesAccessKey="True"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="Ellipse" Property="Fill" Value="White" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Ellipse" Property="Fill" Value="#ff66c6" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Ellipse" Property="Stroke" Value="#FF9EDB" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="Ellipse" Property="Fill" Value="#FF9EDB" />
                                    <Setter TargetName="Ellipse" Property="Stroke" Value="#FF9EDB" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <!--<Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="White" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="Gray" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="Yellow" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="Pink" />
                                <Setter Property="Foreground" Value="Purple"/>
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Grid x:Name="osuReplayWindow" Background="Black">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!--osu playfield-->
        <Grid x:Name="playfieldGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <TextBlock x:Name="startupInfo" Grid.Row="1" Grid.Column="1" Foreground="#24f2f8" FontSize="16" Width="500"
                       HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" TextWrapping="WrapWithOverflow"></TextBlock>

            <Border x:Name="playfieldBorder" Visibility="Hidden" Grid.Column="1" Grid.Row="1" BorderThickness="4" BorderBrush="White">
                <Canvas x:Name="playfieldCanva" Width="512" Height="384" ClipToBounds="False">
                    <Ellipse x:Name="playfieldCursor" Width="25" Height="25" Fill="HotPink" Stroke="White" StrokeThickness="3" Panel.ZIndex="99"/>
                </Canvas>
            </Border>

            <Grid.Background>
                <ImageBrush x:Name="playfieldBackground"/>
            </Grid.Background>
        </Grid>

        <!--music timer/buttons-->
        <Grid Grid.Row="1" x:Name="musicControlUI" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" MinHeight="50"  Background="#24f2f8">
            <vlc:VideoView Width="0" Height="0" x:Name="musicPlayer" Visibility="Collapsed" />

            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" x:Name="playerButton" Focusable="False" Style="{StaticResource PlayButton}"/>
                <TextBlock Grid.Column="1" x:Name="songTimer" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#392A36">00:00:00:000</TextBlock>
                <TextBlock Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#392A36">/</TextBlock>
                <TextBlock Grid.Column="3" x:Name="songMaxTimer" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#392A36">00:00:00:000</TextBlock>
                <Slider Grid.Column="4" x:Name="songSlider" MinWidth="0" Minimum="0" Style="{StaticResource HorizontalSlider}" />

                <Grid Grid.Column="5" HorizontalAlignment="Right" VerticalAlignment="Center" Width="Auto" Margin="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Path x:Name="volumeIcon" HorizontalAlignment="Center" VerticalAlignment="Center" Width="20" Height="20" Fill="#392A36" Data="m5 7 4.146-4.146a.5.5 0 0 1 .854.353v13.586a.5.5 0 0 1-.854.353L5 13H4a2 2 0 0 1-2-2V9a2 2 0 0 1 2-2h1zm9 3a2 2 0 0 0-2-2v4a2 2 0 0 0 2-2z"/>
                    <Slider Grid.Column="1" x:Name="volumeSlider" Focusable="False" HorizontalAlignment="Center" VerticalAlignment="Center" TickFrequency="1" IsSnapToTickEnabled="True" Width="100" Maximum="100" Minimum="0" Value="5" />
                    <TextBlock Grid.Column="2" x:Name="musicPlayerVolume" Margin="10,0 ,0, 0" Width="30" Foreground="#392A36" Text="0%"/>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
    
    <!--<Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Open" CanExecute="Open_CanExecute" Executed="Open_Executed" />
        <CommandBinding Command="MediaCommands.Play" CanExecute="Play_CanExecute" Executed="Play_Executed" />
        <CommandBinding Command="MediaCommands.Pause" CanExecute="Pause_CanExecute" Executed="Pause_Executed" />
        <CommandBinding Command="MediaCommands.Stop" CanExecute="Stop_CanExecute" Executed="Stop_Executed" />
    </Window.CommandBindings>-->
    
    <!-- https://learn.microsoft.com/en-us/dotnet/desktop/wpf/advanced/commanding-overview -->
    <!--<Window.CommandBindings>
        <CommandBinding Command="MediaCommands.Play" />
        <CommandBinding Command="MediaCommands.Pause" />
        <CommandBinding Command="MediaCommands.IncreaseVolume" />
        <CommandBinding Command="MediaCommands.DecreaseVolume" />
    </Window.CommandBindings>-->
</Window>
